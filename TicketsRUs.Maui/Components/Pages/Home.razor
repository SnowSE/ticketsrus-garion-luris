@page "/"
@using TicketsRUs.ClassLib.Data
@using TicketsRUs.ClassLib.Services
@using TicketsRUs.Maui.Controllers
@inject ITicketService _service

<h1>Scan Test</h1>

<h3>TicketWeb_App</h3>

@if (dataLoaded)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">EventId</th>
                <th scope="col">Start-Time</th>
                <th scope="col">Scanned</th>
                <th scope="col">Identifier</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Ticket t in tickets)
            {
                <tr>
                    <th scope="row">@t.EventId</th>
                    <th scope="row">@t.Event.StartTime</th>
                    <th scope="row">@t.Scanned</th>
                    <th scope="row">@t.Identifier</th>
                </tr>
            }

        </tbody>
    </table>
}

@* <button class="btn btn-primary" @onclick="Scan">Scan</button> *@
<br />

Scan Result: @scanner.ScanResult

@if (scanner.SuccessfulScan) {
    <p class="bg-success">Sucess!</p>
}

@code 
{
    QRScanner scanner;
    List<Ticket> tickets = new();
    List<AvailableEvent> events = new();
    SyncController syn;


    bool dataLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        scanner = new(_service);
        syn = new("luris-garion-ticketsrus.postgres.database.azure.com", _service);

        tickets = (await _service.GetAllTickets()).OrderBy(t => t.EventId).ToList();
        events = (await _service.GetAllAvailableEvents()).ToList();

        dataLoaded = true;
        StateHasChanged();
        await syn.Start();

    }

    private async Task Scan()
    {
        await scanner.DoScanAsync(0); // FIX - 0 should be the event id that is selected.
    }
}